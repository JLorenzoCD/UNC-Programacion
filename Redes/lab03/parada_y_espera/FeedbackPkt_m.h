//
// Generated file, do not edit! Created by opp_msgtool 6.0 from FeedbackPkt.msg.
//

#ifndef __FEEDBACKPKT_M_H
#define __FEEDBACKPKT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class feedbackPkt;
/**
 * Class generated from <tt>FeedbackPkt.msg:2</tt> by opp_msgtool.
 * <pre>
 * packet feedbackPkt
 * {
 * }
 * </pre>
 */
class feedbackPkt : public ::omnetpp::cPacket
{
  protected:

  private:
    void copy(const feedbackPkt& other);

  protected:
    bool operator==(const feedbackPkt&) = delete;

  public:
    feedbackPkt(const char *name=nullptr, short kind=0);
    feedbackPkt(const feedbackPkt& other);
    virtual ~feedbackPkt();
    feedbackPkt& operator=(const feedbackPkt& other);
    virtual feedbackPkt *dup() const override {return new feedbackPkt(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const feedbackPkt& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, feedbackPkt& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline feedbackPkt *fromAnyPtr(any_ptr ptr) { return check_and_cast<feedbackPkt*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __FEEDBACKPKT_M_H

