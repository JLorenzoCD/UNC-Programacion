16. Demostra por induccion que las funciones definidas en el Ejercicio 5 (implementaciones) satisfacen las propiedades del Ejercicio 3 que las especifican. (A esta tarea se la denomina verificacion).

#################################### a) Todas las figuras de xs son rojas.
Hipotesis Inductiva = todas_cr xs ≡ <∀x : x ∈ℓ xs : rojo.x>

############ Caso base xs = []
todas_cr [] ≡ < ∀x : x ∈ℓ [] : rojo.x >

todas_cr [] ≡ < ∀x : __x ∈ℓ []__ : rojo.x >
{Por pert - Caso 1}
todas_cr [] ≡ < ∀x : False : rojo.x >

__todas_cr []__ ≡ < ∀x : False : rojo.x >
{Por todas_cr - Caso 3}
True ≡ < ∀x : False : rojo.x >

True ≡ __< ∀x : False : rojo.x >__
{T5 Rango Vacıo de ∀}
True ≡ True
{Es Valido}

############ Caso base xs = (k:xs)
todas_cr (k:xs) ≡ < ∀x : x ∈ℓ (k:xs) : rojo.x >

__todas_cr (k:xs)__ ≡ < ∀x : x ∈ℓ (k:xs) : rojo.x >
{Por todas_cr - Caso 2}
rojo.k ∧ todas_cr xs ≡ < ∀x : x ∈ℓ (k:xs) : rojo.x >

rojo.k ∧ todas_cr xs ≡ < ∀x : __x ∈ℓ (k:xs)__ : rojo.x >
{Por pert - Caso 2}
rojo.k ∧ todas_cr xs ≡ < ∀x : x == k ∨ x ∈ℓ xs : rojo.x >

rojo.k ∧ todas_cr xs ≡ __< ∀x : x == k ∨ x ∈ℓ xs : rojo.x >__
{T1 Particion de rango de ∀}
rojo.k ∧ todas_cr xs ≡ ⟨∀x : x == k : rojo.x⟩ ∧ ⟨∀x : x ∈ℓ xs : rojo.x⟩

rojo.k ∧ todas_cr xs ≡ __⟨∀x : x == k : rojo.x⟩__ ∧ ⟨∀x : x ∈ℓ xs : rojo.x⟩
{A4 Rango unitario de ∀}
rojo.k ∧ todas_cr xs ≡ rojo.k ∧ ⟨∀x : x ∈ℓ xs : rojo.x⟩

rojo.k ∧ todas_cr xs ≡ rojo.k ∧ __⟨∀x : x ∈ℓ xs : rojo.x⟩__
{Por Hipotesis Inductiva}
rojo.k ∧ todas_cr xs ≡ rojo.k ∧ todas_cr xs
{Es Valido}



#################################### b) Todas las figuras de xs son de tamaño menor a 5.
Hipotesis Inductiva = todas_tam_menor_5 xs ≡ < ∀x : x ∈ℓ xs : tam.x < 5 >

############ Caso base xs = []
todas_tam_menor_5 [] ≡ < ∀x : x ∈ℓ [] : tam.x < 5 >

todas_tam_menor_5 [] ≡ < ∀x : __x ∈ℓ []__ : tam.x < 5 >
{Por pert - Caso 1}
todas_tam_menor_5 [] ≡ < ∀x : False : tam.x < 5 >

__todas_tam_menor_5 []__ ≡ < ∀x : False : tam.x < 5 >
{Por todas_tam_menor_5 - Caso 3}
True ≡ < ∀x : False : tam.x < 5 >

True ≡ __< ∀x : False : tam.x < 5 >__
{T5 Rango Vacıo de ∀}
True ≡ True
{Es Valido}

############ Caso base xs = (k:xs)
todas_tam_menor_5 (k:xs) ≡ < ∀x : x ∈ℓ (k:xs) : tam.x < 5 >

__todas_tam_menor_5 (k:xs)__ ≡ < ∀x : x ∈ℓ (k:xs) : tam.x < 5 >
{Por - Caso 4}
(tam.k < 5 ) ∧ todas_tam_menor_5 xs ≡ < ∀x : x ∈ℓ (k:xs) : tam.x < 5 >

(tam.k < 5 ) ∧ todas_tam_menor_5 xs ≡ < ∀x : __x ∈ℓ (k:xs)__ : tam.x < 5 >
{Por pert - Caso 2}
(tam.k < 5 ) ∧ todas_tam_menor_5 xs ≡ < ∀x : x == k ∨ x ∈ℓ xs : tam.x < 5 >

(tam.k < 5 ) ∧ todas_tam_menor_5 xs ≡ __< ∀x : x == k ∨ x ∈ℓ xs : tam.x < 5 >__
{T1 Particion de rango de ∀}
(tam.k < 5 ) ∧ todas_tam_menor_5 xs ≡ < ∀x : x == k : tam.x < 5 > ∧ < ∀x : x ∈ℓ xs : tam.x < 5 >

(tam.k < 5 ) ∧ todas_tam_menor_5 xs ≡ __< ∀x : x == k : tam.x < 5 >__ ∧ < ∀x : x ∈ℓ xs : tam.x < 5 >
{A4 Rango unitario de ∀}
(tam.k < 5 ) ∧ todas_tam_menor_5 xs ≡ tam.k < 5 ∧ < ∀x : x ∈ℓ xs : tam.x < 5 >

(tam.k < 5 ) ∧ todas_tam_menor_5 xs ≡ tam.k < 5 ∧ __< ∀x : x ∈ℓ xs : tam.x < 5 >__
{Por Hipotesis Inductiva}
tam.k < 5 ∧ todas_tam_menor_5 xs ≡ tam.k < 5 ∧ todas_tam_menor_5 xs
{Es Valido}



#################################### c) Todos los triangulos de xs son rojos.
Hipotesis Inductiva = todos_triangulos_cr xs ≡ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >

############ Caso base xs = []
todos_triangulos_cr [] ≡ < ∀x : x ∈ℓ [] : triangulo.x ⇒ rojo.x >

__todos_triangulos_cr []__ ≡ < ∀x : x ∈ℓ [] : triangulo.x ⇒ rojo.x >
{Por todos_triangulos_cr - Caso 3}
True ≡ < ∀x : x ∈ℓ [] : triangulo.x ⇒ rojo.x >

True ≡ < ∀x : __x ∈ℓ []__ : triangulo.x ⇒ rojo.x >
True ≡ __< ∀x : False : triangulo.x ⇒ rojo.x >__
True ≡ True
{Es Valido}

############ Caso base xs = (k:xs)
todos_triangulos_cr (k:xs) ≡ < ∀x : x ∈ℓ (k:xs) : triangulo.x ⇒ rojo.x >

todos_triangulos_cr (k:xs) ≡ < ∀x : __x ∈ℓ (k:xs)__ : triangulo.x ⇒ rojo.x >
todos_triangulos_cr (k:xs) ≡ __< ∀x : x == k ∨ x ∈ℓ xs : triangulo.x ⇒ rojo.x >__
todos_triangulos_cr (k:xs) ≡ __< ∀x : x == k : triangulo.x ⇒ rojo.x >__ ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >
todos_triangulos_cr (k:xs) ≡ triangulo.k ⇒ rojo.k ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >

todos_triangulos_cr (k:xs) ≡ __triangulo.k ⇒ rojo.k__ ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >
{T19 Caracterizacion ⇒}
todos_triangulos_cr (k:xs) ≡ ¬triangulo.k ∨ rojo.k ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >
{Se debe evauar los casos}

## Caso triangulo.x ≡ True
todos_triangulos_cr (k:xs) ≡ __¬triangulo.k__ ∨ rojo.k ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >
todos_triangulos_cr (k:xs) ≡ __False ∨ rojo.k__ ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >
todos_triangulos_cr (k:xs) ≡ rojo.k ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >

__todos_triangulos_cr (k:xs)__ ≡ rojo.k ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >
{Por todos_triangulos_cr - Caso 4-a}
rojo.x ∧ todos_triangulos_cr xs ≡ rojo.k ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >

rojo.x ∧ todos_triangulos_cr xs ≡ rojo.k ∧ __< ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >__
{Por Hipotesis Inductiva}
rojo.x ∧ todos_triangulos_cr xs ≡ rojo.k ∧ todos_triangulos_cr xs
{Es Valido}

## Caso triangulo.x ≡ False
todos_triangulos_cr (k:xs) ≡ __¬triangulo.k__ ∨ rojo.k ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >
todos_triangulos_cr (k:xs) ≡ __True ∨ rojo.k__ ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >
todos_triangulos_cr (k:xs) ≡ __True ∧ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >__
todos_triangulos_cr (k:xs) ≡ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >

__todos_triangulos_cr (k:xs)__ ≡ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >
{Por todos_triangulos_cr - Caso 4-b}
todos_triangulos_cr xs ≡ < ∀x : x ∈ℓ xs : triangulo.x ⇒ rojo.x >
{Por Hipotesis Inductiva, es Valido}



#################################### d) Existe un cuadrado verde en xs.
Hipotesis Inductiva = hay_cuadrado_cv xs ≡ < ∃x : x ∈ℓ xs : cuadrado.x ∧ verde.x >

############ Caso base xs = []
hay_cuadrado_cv [] ≡ < ∃x : x ∈ℓ [] : cuadrado.x ∧ verde.x >
hay_cuadrado_cv [] ≡ < ∃x : __x ∈ℓ []__ : cuadrado.x ∧ verde.x >
hay_cuadrado_cv [] ≡ __< ∃x : False : cuadrado.x ∧ verde.x >__
hay_cuadrado_cv [] ≡ False

__hay_cuadrado_cv []__ ≡ False
{Por hay_cuadrado_cv - Caso 3}
False ≡ False
{Es Valido}

############ Caso base xs = (k:xs)
hay_cuadrado_cv (k:xs) ≡ < ∃x : x ∈ℓ (k:xs) : cuadrado.x ∧ verde.x >
hay_cuadrado_cv (k:xs) ≡ < ∃x : __x ∈ℓ (k:xs)__ : cuadrado.x ∧ verde.x >
hay_cuadrado_cv (k:xs) ≡ __< ∃x : x == k ∨ x ∈ℓ xs : cuadrado.x ∧ verde.x >__
hay_cuadrado_cv (k:xs) ≡ __< ∃x : x == k : cuadrado.x ∧ verde.x >__ ∨ < ∃x : x ∈ℓ xs : cuadrado.x ∧ verde.x >
hay_cuadrado_cv (k:xs) ≡ (cuadrado.k ∧ verde.k) ∨ < ∃x : x ∈ℓ xs : cuadrado.x ∧ verde.x >

___hay_cuadrado_cv (k:xs)___ ≡ (cuadrado.k ∧ verde.k) ∨ < ∃x : x ∈ℓ xs : cuadrado.x ∧ verde.x >
{Por hay_cuadrado_cv - Caso 4}
(cuadrado.k ∧ verde.k) ∨ hay_cuadrado_cv xs ≡ (cuadrado.k ∧ verde.k) ∨ < ∃x : x ∈ℓ xs : cuadrado.x ∧ verde.x >

(cuadrado.k ∧ verde.k) ∨ __hay_cuadrado_cv xs__ ≡ (cuadrado.k ∧ verde.k) ∨ < ∃x : x ∈ℓ xs : cuadrado.x ∧ verde.x >
{Por Hipotesis Inductiva}
(cuadrado.k ∧ verde.k) ∨ < ∃x : x ∈ℓ xs : cuadrado.x ∧ verde.x > ≡ (cuadrado.k ∧ verde.k) ∨ < ∃x : x ∈ℓ xs : cuadrado.x ∧ verde.x >
{Es Valido}